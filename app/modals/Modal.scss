@import '../styles/constants';
@import '../styles/mixins/mq';

@keyframes modalContentEnterAnimation {
  from {
    transform: scale(.95);
    opacity: 0;
  }
  to {
    transform: scale(1);
    opacity: 1;
  }
}
@keyframes modalBackdropEnterAnimation {
  from {
    opacity: 0;
  }
  to {
    opacity: .4;
  }
}
.Modal {
  position: fixed;
  z-index: $z-index-modal;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  overflow: hidden;
  &.in {
    opacity: 1;
  }
}

.Modal.isFetchingContent {
  .ModalHeader,
  .ModalBody,
  .ModalFooter,
  .ModalBodyFixed {
    display: none;
  }
}

.Modal-dialog {
  width: 100%;
  height: 100vh;
  margin: 0 auto;
}

@include desktop() {
  .Modal-dialog {
    width: 200px;
    transition: width .25s, height .25s;
    .Modal-content {
      min-height: 100px;
    }
  }
}

.Modal-content {
  position: relative;
  display: flex;
  flex-direction: column;
  background: $white;

  -webkit-tap-highlight-color: rgba(0,0,0,0);
  .Modal.enterAnimation & {
    animation: modalContentEnterAnimation 200ms;
  }
  &:focus {
    outline: none;
  }
  .Modal.isFetchingContent & {
    display: flex;
    justify-content: center;
    flex-direction: column;
  }
}

.Modal-content-backdrop {
  position: absolute;
  z-index: 2;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  display: flex;
  justify-content: center;
  content: '';
  animation: modalBackdropEnterAnimation 100ms;
  background-color: rgba(white, .8);

  align-content: center;
}

@include tablet() {
  .Modal-content {
    position: fixed;
    top: 10px !important;
    right: 10px;
    bottom: 10px;
    left: 10px;
  }
}

@include desktop() {
  .Modal-content {
    top: 100px;
    border-radius: $border-radius-small;
    box-shadow: $box-shadow-depth-2;
  }
}

.ModalHeader {
  position: relative;
  z-index: 1;
  display: flex;
  align-items: center;
  padding: $vertical-spacing $horizontal-spacing/2;
  border-bottom: 1px solid $border-color;
  border-top-left-radius: $border-radius-small;
  border-top-right-radius: $border-radius-small;
}

.ModalHeader-close {
  position: absolute;
  top: 50%;
  right: $horizontal-spacing/2;
  transform: translateY(-50%);
  svg {
    cursor: pointer;
    opacity: .2;
    &:hover {
      opacity: .25;
    }
  }
}

.ModalHeader-content {
  margin: 0;
  padding: 0;
  text-align: center;
  font-weight: 500;

  flex: 1;
}

.ModalFooter {
  padding: $vertical-spacing/2 $horizontal-spacing;
  text-align: right;
  border-top: 1px solid $border-color;
  font-size: .875em;
  min-height: 60px;
  display: flex;
  align-items: center;
  justify-content: center;
  > .Button {
    margin: 0 .25em;
    &.default {
      color: $color-text;
      &:hover {
        color: $color-text-light;
      }
    }
    &:last-child {
      margin-right: 0;
    }
    &:first-child {
      margin-left: 0;
    }
    &:first-child:last-child {
      display: block;
      width: 100%;
      margin: 0 auto;
    }
  }
  .Progress {
    padding: 0;
  }
}

@include desktop() {
  font-size: 1em;
}

.ModalBody {
  position: relative;
  overflow-x: hidden;
  overflow-y: auto;
  -webkit-overflow-scrolling: touch;
  padding: $vertical-spacing $horizontal-spacing;
  .Modal.hideBody & {
    visibility: hidden;
  }
  &.paginated {
    padding: 0;
    .ScrollablePaginated-Content {
      > * {
        display: block;
        width: 100%;
        padding: $vertical-spacing/2 $horizontal-spacing;
        border-bottom: 1px solid $border-color-light;
        border-radius: $border-radius-small;
        &:last-child {
          border-bottom-width: 0;
        }
        &:hover {
          background-color: $background-color;
        }
      }
    }
  }
}

.ModalBody {
  position: relative;
}

@include tablet() {
  .ModalBody {
    flex: 1;
  }
}

.ModalBodyFixed {
  padding: .75rem;
}

.ModalBody-backdrop {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  animation: modalBackdropEnterAnimation 100ms;
  background-color: rgba(white, .5);
}


.Modal-backdrop {
  position: fixed;
  z-index: $z-index-modal-backdrop;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  opacity: .4;
  background-color: #000;

  &.enterAnimation {
    animation: modalBackdropEnterAnimation 100ms;
  }
}


.Modal-animation-leave {
  .Modal-backdrop {
    opacity: .4;
  }
  .Modal-dialog {
    opacity: 1;
    .Modal-content {
      transform: scale(1);
    }
  }
}

.Modal-animation-leave.Modal-animation-leave-active {
  .Modal-backdrop {
    transition: opacity 300ms;
    opacity: 0;
  }
  .Modal-dialog {
    transition: opacity 250ms;
    opacity: 0;
    .Modal-content {
      transition: transform 250ms;
      transform: scale(.95);
    }
  }
}
